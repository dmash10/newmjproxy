mj:
  # Discord Account Configuration - Use environment variables for security
  accounts:
    - guild-id: "${DISCORD_GUILD_ID:}"
      channel-id: "${DISCORD_CHANNEL_ID:}"
      user-token: "${DISCORD_USER_TOKEN:}"
      core-size: "${MJ_CORE_SIZE:3}"
      queue-size: "${MJ_QUEUE_SIZE:10}"
      timeout-minutes: "${MJ_TIMEOUT_MINUTES:5}"
      enable: true
  
  # API Security - Use environment variable
  api-secret: "${MJ_API_SECRET:midjourneyproxy123}"
  
  # Task Storage
  task-store:
    type: "${MJ_TASK_STORE_TYPE:in_memory}"
    timeout: "${MJ_TASK_STORE_TIMEOUT:30d}"
  
  # Translation settings
  translate-way: "${MJ_TRANSLATE_WAY:null}"
  
  # Notification settings
  notify-pool-size: "${MJ_NOTIFY_POOL_SIZE:10}"

# Server settings - Railway uses PORT environment variable
server:
  port: "${PORT:8080}"
  servlet:
    context-path: /mj
  
# Spring settings
spring:
  profiles:
    active: "${SPRING_PROFILES_ACTIVE:railway}"
  main:
    allow-bean-definition-overriding: true

---
# Railway-specific profile
spring:
  config:
    activate:
      on-profile: railway

# Railway optimizations
server:
  port: "${PORT:8080}"
  servlet:
    context-path: /mj
  tomcat:
    max-threads: 200
    min-spare-threads: 10
    connection-timeout: 20000
    max-connections: 8192

# Logging configuration for Railway
logging:
  level:
    root: INFO
    com.github.novicezk: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints for health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  health:
    diskspace:
      enabled: false

# Disable knife4j documentation
knife4j:
  enable: false
  production: true
